{"version":3,"sources":["apolloClient.js","queries.js","Movie.js","Home.js","Detail.js","globalStyles.js","App.js","index.js"],"names":["client","ApolloClient","uri","HOME_PAGE","gql","_templateObject","MOVIE_DETAILS","_templateObject2","Card","styled","div","Movie_templateObject","props","concat","background","Title","span","Movie_templateObject2","Movie","_ref","id","title","rating","poster","react_default","a","createElement","Link","to","propsTypes","PropTypes","number","isRequired","string","Container","Home_templateObject","Home","Helmet","react_apollo_browser_umd","query","loading","data","error","movies","map","movie","medium_cover_image","src_Movie","key","Detail_templateObject","Image","Detail_templateObject2","withComponent","h1","_templateObject3","Paragraph","_templateObject4","bold","MovieContainer","_templateObject5","Detail","movieId","match","params","variables","parseInt","_ref2","_data$movie","description_intro","react","Detail_Container","src","Detail_Title","suggestions","createGlobalStyle","globalStyles_templateObject","reset","App","HashRouter","globalStyles","Route","exact","path","component","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7ecf5af8.chunk.js","sourcesContent":["import ApolloClient from 'apollo-boost';\n\nconst client = new ApolloClient({\n  // uri: 'https://movieql-osezlvyqsg.now.sh',\n  uri: '/graphql',\n});\n\nexport default client;","import gql from 'graphql-tag';\n\nexport const HOME_PAGE = gql`\n  query {\n    movies(limit: 50, minimum_rating: 7) {\n      id\n      title\n      rating\n      medium_cover_image\n      genres\n    }\n  }\n`;\n\nexport const MOVIE_DETAILS = gql`\n  query getMovieDetails($movieId: Int!) {\n    movie(movie_id: $movieId) {\n      medium_cover_image\n      title\n      rating\n      description_full\n      language\n      genres\n    },\n    suggestions(movie_id: $movieId) {\n      id\n      medium_cover_image\n      title\n      rating\n    }\n  }\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Card = styled.div`\n  position: relative;\n  width: 200px;\n  height: 300px;\n  margin: 40px 0;\n  border-radius: 15px;\n  box-shadow: 0 10px 20px rgba(0,0,0.19), 0 6px 6px rgba(0,0,0.23);\n  background-image: ${props => `url(${props.background})`};\n  background-size: cover;\n  background-position: center center;\n`;\n\nconst Title = styled.span`\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 25px;\n  width: auto;\n  margin: auto;\n  padding: 10px;\n  background-color: white;\n  box-shadow: 0 10px 20px rgba(0,0,0.19), 0 6px 6px rgba(0,0,0.23);\n`;\n\nconst Movie = ({ id, title, rating, poster }) => (\n  <Link to={`/details/${id}`}>\n    <Card background={poster}>\n      <Title>\n        {title} / {rating}⭐️\n      </Title>\n    </Card>\n  </Link>\n);\n\nMovie.propsTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number.isRequired,\n  poster: PropTypes.string.isRequired,\n};\n\nexport default Movie;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Query } from 'react-apollo';\nimport { Helmet } from 'react-helmet';\nimport { HOME_PAGE } from './queries';\nimport Movie from './Movie';\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 0.7fr);\n  flex-wrap: wrap;\n  justify-items: center;\n`;\n\nconst Home = () => (\n  <Container>\n    <Helmet>\n      <title>Home | MovieQL</title>\n    </Helmet>\n    <Query query={HOME_PAGE}>\n    {\n      ({loading, data, error}) => {\n        if (loading) return <span>loading</span>;\n        if (error) return <span>somethine happened</span>;\n\n        return data.movies.map((movie) => {\n          const { id, title, rating, medium_cover_image } = movie;\n\n          return (\n            <Movie\n              key={id}\n              id={id}\n              title={title}\n              rating={rating}\n              poster={medium_cover_image}\n            />\n          );\n        });\n      }\n    }\n    </Query>\n  </Container>\n);\n\nexport default Home;","import React, { Fragment } from 'react';\nimport styled from 'styled-components';\nimport { Query } from 'react-apollo';\nimport { Helmet } from 'react-helmet';\nimport { MOVIE_DETAILS } from './queries';\nimport Movie from './Movie';\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n  margin: 40px 0 50px 0;\n`;\n\nconst Card = styled.div`\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  background-color: white;\n  border-radius: 7px;\n  margin-right: 20px;\n`;\n\nconst Image = Card.withComponent(\"img\");\n\nconst Title = styled.h1`\n  font-size: 24px;\n  margin-bottom: 10px;\n`;\n\nconst Paragraph = styled.span`\n  margin-bottom: 10px;\n  display: block;\n  font-weight: ${props => (props.bold ? \"500\" : \"400\")};\n`;\n\nconst MovieContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 0.7fr);\n  flex-wrap: wrap;\n  justify-items: center;\n  margin-top: 50px;\n`;\n\nconst Detail = ({\n  match: {\n    params: { movieId }\n  }\n}) => {\n  return <Query query={MOVIE_DETAILS} variables={{ movieId: parseInt(movieId) }}>\n    {\n      ({loading, error, data}) => {\n        if (loading) return <span>loading</span>;\n        if (error) return <span>somethine happened</span>;\n\n        const {\n          title,\n          rating,\n          medium_cover_image,\n          description_intro,\n        } = data.movie;\n\n        return (\n          <Fragment>\n            <Container>\n              <Helmet>\n                <title>{title} | MovieQL</title>\n              </Helmet>\n              <Image src={medium_cover_image} />\n              <div>\n                <Title>{title}</Title>\n                <Paragraph bold>{rating}</Paragraph>\n                <Paragraph>{description_intro}</Paragraph>\n              </div>\n            </Container>\n            <Title>Suggested</Title>\n            <MovieContainer>\n              {\n                data.suggestions.map((movie) => {\n                  const {\n                    id,\n                    title,\n                    rating,\n                    medium_cover_image\n                  } = movie;\n                  return (\n                    <Movie\n                      key={id}\n                      id={id}\n                      title={title}\n                      rating={rating}\n                      poster={medium_cover_image}\n                    />\n                  );\n                })\n              }\n            </MovieContainer>\n            {title}\n            {rating}\n            {medium_cover_image}\n            {description_intro}\n          </Fragment>\n        )\n      }\n    }\n  </Query>\n}\n\nexport default Detail;\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nexport default createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Maven+Pro:400,500');\n  ${reset};\n  body {\n    font-family: 'Maven Pro', sans-serift;\n    background-color: #ecf0f1;\n  }\n  a {\n    color: inherit;\n  }\n  main {\n    width: 80%;\n    margin: 0 auto;\n    padding: 20px;\n  }\n`;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { ApolloProvider } from 'react-apollo';\nimport client from './apolloClient';\nimport Home from './Home';\nimport Detail from './Detail';\nimport GlobalStyles from './globalStyles';\n\nclass App extends Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <Router>\n          <main>\n            <GlobalStyles />\n            <Route exact={true} path={'/'} component={Home} />\n            <Route path={'/details/:movieId'} component={Detail} />\n          </main>\n        </Router>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}